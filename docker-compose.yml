version: '3'
services:
  auth:
    container_name: auth-service
    restart: always
    build:
      context: ./backend
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    ports:
      - '8000:8000'
    env_file:
      - ./backend/apps/auth/.env
    environment:
      DATABASE_HOST: db_auth
    depends_on:
      - db_auth
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    # networks:
    #   - my_network
  short-url:
    container_name: short-url-service
    restart: always
    build:
      context: ./backend
      dockerfile: ./apps/short_url/Dockerfile
      target: development
    command: npm run start:dev short_url
    ports:
      - '8001:8001'
    env_file:
      - ./backend/apps/short_url/.env
    environment:
      DATABASE_HOST: db_url
      DATABASE_PORT: 3306
    depends_on:
      - db_url
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    # networks:
    #   - my_network
  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=development
    # networks:
    #   - my_network
  db_auth:
    image: mysql
    container_name: db_auth
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: short_url
    volumes:
      - ./data/mysql-1:/var/lib/mysql
    ports:
      - "3306:3306"
  db_url:
    image: mysql
    container_name: db_url
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: short_url
    volumes:
      - ./data/mysql-2:/var/lib/mysql
    ports:
      - "3307:3306" 
  nginx-proxy:
    build:
      dockerfile: Dockerfile
      context: ./proxy
    depends_on:
      - auth
      - web
      
      - short-url
    ports:
      - 80:80
    # networks:
    #   - my_network
# networks:
#   my_network: